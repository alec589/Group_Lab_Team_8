/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package info5100.university.example.UIfaculty;

import info5100.university.example.CourseCatalog.Course;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.CourseSchedule.CourseSchedule;
import info5100.university.example.CourseSchedule.Seat;
import info5100.university.example.Department.Calendar;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.Faculty.FacultyProfile;
import info5100.university.example.Persona.UserAccount;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luwang
 */
public class CourseManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseManagementJPanel
     */
    JPanel mainpanel;
    Department department;
    UserAccount currentUser;
    String currentSemester;
    public CourseManagementJPanel(JPanel mainpanel, Department department, UserAccount currentUser) {
        initComponents();
        this.mainpanel = mainpanel;
        this.department = department;
        this.currentUser = currentUser;
        
        setPreferredSize(new Dimension(800, 600));

        populateSemesterCombo();
        
        cmbSemester.addActionListener(e -> populateTable());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseDetail = new javax.swing.JTable();
        btnUpload = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fieldID = new javax.swing.JTextField();
        fieldTitle = new javax.swing.JTextField();
        fieldDes = new javax.swing.JTextField();
        fieldCapacity = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 6), new java.awt.Dimension(0, 6), new java.awt.Dimension(32767, 6));
        jSeparator1 = new javax.swing.JSeparator();
        btnYes = new javax.swing.JRadioButton();
        btnNo = new javax.swing.JRadioButton();
        btnViewCourse = new javax.swing.JButton();
        btnUpdateCourse = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        fieldSyllabusPath = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        jLabel1.setText("Semester:");

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSemesterActionPerformed(evt);
            }
        });

        tblCourseDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Title", "Description", "Capacity", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblCourseDetail);

        btnUpload.setText("Upload Syllabus");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        btnRemove.setText("Romove Syllabus");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel3.setText("ID");

        jLabel4.setText("Course Details:");

        jLabel5.setText("Title");

        jLabel6.setText("Description");

        jLabel8.setText("Capacity");

        jLabel9.setText("Enrolloment Status");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnYes.setText("Open");

        btnNo.setText("Close");

        btnViewCourse.setText("View Course");
        btnViewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCourseActionPerformed(evt);
            }
        });

        btnUpdateCourse.setText("Update Course");
        btnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCourseActionPerformed(evt);
            }
        });

        jButton6.setText("<<Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btnView.setText("View Syllabus");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(31, 31, 31)
                                        .addComponent(fieldTitle))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fieldDes, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(btnViewCourse)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdateCourse)
                                        .addGap(57, 57, 57)))
                                .addGap(34, 34, 34))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(40, 40, 40)
                                .addComponent(btnYes)
                                .addGap(27, 27, 27)
                                .addComponent(btnNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnUpload)
                                                .addGap(37, 37, 37)
                                                .addComponent(btnRemove))
                                            .addComponent(fieldSyllabusPath)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(btnView))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpload)
                            .addComponent(btnRemove))
                        .addGap(36, 36, 36)
                        .addComponent(fieldSyllabusPath, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(fieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(fieldCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fieldDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(btnYes)
                            .addComponent(btnNo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewCourse)
                            .addComponent(btnUpdateCourse))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCourseActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCourseDetail.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a course");
            return;
        }
        
        String ID = String.valueOf(tblCourseDetail.getValueAt(selectedRow, 0));
        String title = (String)tblCourseDetail.getValueAt(selectedRow, 1);
        String des = (String)tblCourseDetail.getValueAt(selectedRow, 2);
        String capacity = String.valueOf(tblCourseDetail.getValueAt(selectedRow, 3));
        String status = (String)tblCourseDetail.getValueAt(selectedRow, 4);
        
        if(status.equals("open")){
            btnYes.setSelected(true);
        } else {
            btnNo.setSelected(true);
        }
        
        fieldID.setText(ID);
        fieldTitle.setText(title);
        fieldDes.setText(des);
        fieldCapacity.setText(capacity);
    }//GEN-LAST:event_btnViewCourseActionPerformed

    private void btnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCourseActionPerformed
        // TODO add your handling code here:
        int ID = Integer.parseInt(fieldID.getText());
        String title = fieldTitle.getText();
        String des = fieldDes.getText();
        int capacity = Integer.parseInt(fieldCapacity.getText());
        boolean isOpen;
        
        if (btnYes.isSelected()){
            isOpen = true;
        } else {
            isOpen = false;
        }
        
        String IDtext = String.valueOf(fieldID.getText());
        String capacitytext = String.valueOf(fieldCapacity.getText());
        if (IDtext.isEmpty() || title.isEmpty() || des.isEmpty() || capacitytext.isEmpty() || (!btnYes.isSelected() && !btnNo.isSelected())){
            JOptionPane.showMessageDialog(this, "Please fill in all fields and select status", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Course c = department.getCourseCatalog().getCourseByNumber(ID);
        
        String semester = (String) cmbSemester.getSelectedItem();
        CourseOffer co = department.getCalendar().getCourseSchedule(semester).getCourseOfferByNumber(ID);
        
        c.setName(title);
        c.setDescription(des);
        
        ArrayList<Seat> seatList = co.getSeatlist();
        if (seatList != null) {
            seatList.clear(); 
        }
        co.generatSeats(capacity);
        
        co.setEnrollmentStatus(isOpen);
        
        JOptionPane.showMessageDialog(this, "Successfully Update!", "success", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_btnUpdateCourseActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        mainpanel.remove(this);
        CardLayout layout = (CardLayout)mainpanel.getLayout();
        layout.previous(mainpanel);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cmbSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSemesterActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("PDF Files", "pdf"));
        chooser.setAcceptAllFileFilterUsed(false);

        int ret = chooser.showOpenDialog(this);
        if (ret != JFileChooser.APPROVE_OPTION) return;

        java.io.File file = chooser.getSelectedFile();
        try {
            java.nio.file.Path targetDir  = java.nio.file.Paths.get("data", "syllabus");
            java.nio.file.Files.createDirectories(targetDir);

            String targetName            = file.getName();
            java.nio.file.Path targetPath= targetDir.resolve(targetName);

            java.nio.file.Files.copy(file.toPath(), targetPath,
                    java.nio.file.StandardCopyOption.REPLACE_EXISTING);

            JOptionPane.showMessageDialog(this, "Syllabus uploaded: " + targetPath);

            fieldSyllabusPath.setText(targetPath.toString());

        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(this.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Upload failed: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        String path = fieldSyllabusPath.getText();
        if (path == null || path.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No syllabus to remove.");
            return;
        }

        try {
            java.nio.file.Path targetPath = java.nio.file.Paths.get(path);
            java.nio.file.Files.deleteIfExists(targetPath);

            fieldSyllabusPath.setText(""); 
            JOptionPane.showMessageDialog(this, "Syllabus removed.");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to remove: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        String p = fieldSyllabusPath.getText();
        if (p == null || p.isEmpty()) return;
        try { java.awt.Desktop.getDesktop().open(java.nio.file.Paths.get(p).toFile()); }
        catch (Exception ex) { javax.swing.JOptionPane.showMessageDialog(this, "Open failed: " + ex.getMessage()); }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnNo;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdateCourse;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewCourse;
    private javax.swing.JRadioButton btnYes;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JTextField fieldCapacity;
    private javax.swing.JTextField fieldDes;
    private javax.swing.JTextField fieldID;
    private javax.swing.JTextField fieldSyllabusPath;
    private javax.swing.JTextField fieldTitle;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblCourseDetail;
    // End of variables declaration//GEN-END:variables

    private void populateSemesterCombo() {
        cmbSemester.removeAllItems();
        
        Collection<String> semesterNames = department.getCalendar().getAllSemesterNames();
        for (String semester: semesterNames){
            cmbSemester.addItem(semester);
        }
        
        cmbSemester.setSelectedIndex(-1);
        
    }


    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCourseDetail.getModel();
        model.setRowCount(0);
        
        String semester = (String) cmbSemester.getSelectedItem();
        ArrayList<CourseOffer> courseOfferList = department.getCalendar().getCourseSchedule(semester).getSchedule();
        
        FacultyProfile fp = (FacultyProfile)currentUser.getAssociatedPersonProfile();
        
        for (CourseOffer co: courseOfferList){
            if (co.getFacultyProfile() == null) continue;
            if (!co.getFacultyProfile().equals (fp)) continue;
            
            Object[] row = new Object[5];
            row[0] = co.getCourseNumber();
            row[1] = co.getCourseName();
            row[2] = co.getCourse().getDescription();
            
            ArrayList<Seat> seatList = co.getSeatlist();
            row[3] = seatList.size();
            
            row[4] = co.isEnrollmentStatus()? "open" : "closed";
            
            model.addRow(row);
        }
        
        tblCourseDetail.getColumnModel().getColumn(0).setPreferredWidth(5);
        tblCourseDetail.getColumnModel().getColumn(1).setPreferredWidth(180);
        tblCourseDetail.getColumnModel().getColumn(2).setPreferredWidth(150);
        tblCourseDetail.getColumnModel().getColumn(3).setPreferredWidth(10);
        tblCourseDetail.getColumnModel().getColumn(4).setPreferredWidth(10);
    }
}
